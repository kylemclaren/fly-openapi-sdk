=begin
#Fly Machines API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for FlyApi::MachinesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MachinesApi' do
  before do
    # run before each test
    @api_instance = FlyApi::MachinesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MachinesApi' do
    it 'should create an instance of MachinesApi' do
      expect(@api_instance).to be_instance_of(FlyApi::MachinesApi)
    end
  end

  # unit tests for machines_cordon
  # “Cordoning” a machine refers to disabling its services, so the proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of machines is started up with services disabled, and when they are all healthy, the services are enabled on the new machines and disabled on the old ones.
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_cordon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_create
  # @param app_name Fly App Name
  # @param request Create machine request
  # @param [Hash] opts the optional parameters
  # @return [Machine]
  describe 'machines_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_create_lease
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param request Request body
  # @param [Hash] opts the optional parameters
  # @return [Lease]
  describe 'machines_create_lease test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_delete
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_delete_metadata
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param key Metadata Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_delete_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_exec
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param request Request body
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'machines_exec test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_list
  # @param app_name Fly App Name
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_deleted Include deleted machines
  # @option opts [String] :region Region filter
  # @return [Array<Machine>]
  describe 'machines_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_list_events
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [Array<MachineEvent>]
  describe 'machines_list_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_list_processes
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort_by Sort by
  # @option opts [String] :order Order
  # @return [Array<ProcessStat>]
  describe 'machines_list_processes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_list_versions
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [Array<MachineVersion>]
  describe 'machines_list_versions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_release_lease
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_release_lease test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_restart
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :timeout Restart timeout as a Go duration string or number of seconds
  # @return [nil]
  describe 'machines_restart test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_show
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [Machine]
  describe 'machines_show test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_show_lease
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [Lease]
  describe 'machines_show_lease test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_show_metadata
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, String>]
  describe 'machines_show_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_signal
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param request Request body
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_signal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_start
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_start test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_stop
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @option opts [StopRequest] :request Optional request body
  # @return [nil]
  describe 'machines_stop test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_uncordon
  # “Cordoning” a machine refers to disabling its services, so the proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of machines is started up with services disabled, and when they are all healthy, the services are enabled on the new machines and disabled on the old ones.
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_uncordon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_update
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param request Request body
  # @param [Hash] opts the optional parameters
  # @return [Machine]
  describe 'machines_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_update_metadata
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param key Metadata Key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'machines_update_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for machines_wait
  # @param app_name Fly App Name
  # @param machine_id Machine ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :instance_id instance? version? TODO
  # @option opts [Integer] :timeout wait timeout. default 60s
  # @option opts [String] :state desired state
  # @return [nil]
  describe 'machines_wait test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
