/*
Fly Machines API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fly-sdk

import (
	"encoding/json"
)

// checks if the ApiMachineRestart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMachineRestart{}

// ApiMachineRestart The Machine restart policy defines whether and how flyd restarts a Machine after its main process exits. See https://fly.io/docs/machines/guides-examples/machine-restart-policy/.
type ApiMachineRestart struct {
	// When policy is on-failure, the maximum number of times to attempt to restart the Machine before letting it stop.
	MaxRetries *int32 `json:"max_retries,omitempty"`
	// * no - Never try to restart a Machine automatically when its main process exits, whether thatâ€™s on purpose or on a crash. * always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly. * on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules.
	Policy *string `json:"policy,omitempty"`
}

// NewApiMachineRestart instantiates a new ApiMachineRestart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMachineRestart() *ApiMachineRestart {
	this := ApiMachineRestart{}
	return &this
}

// NewApiMachineRestartWithDefaults instantiates a new ApiMachineRestart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMachineRestartWithDefaults() *ApiMachineRestart {
	this := ApiMachineRestart{}
	return &this
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *ApiMachineRestart) GetMaxRetries() int32 {
	if o == nil || IsNil(o.MaxRetries) {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineRestart) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRetries) {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *ApiMachineRestart) HasMaxRetries() bool {
	if o != nil && !IsNil(o.MaxRetries) {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *ApiMachineRestart) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *ApiMachineRestart) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineRestart) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ApiMachineRestart) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *ApiMachineRestart) SetPolicy(v string) {
	o.Policy = &v
}

func (o ApiMachineRestart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMachineRestart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxRetries) {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	return toSerialize, nil
}

type NullableApiMachineRestart struct {
	value *ApiMachineRestart
	isSet bool
}

func (v NullableApiMachineRestart) Get() *ApiMachineRestart {
	return v.value
}

func (v *NullableApiMachineRestart) Set(val *ApiMachineRestart) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMachineRestart) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMachineRestart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMachineRestart(val *ApiMachineRestart) *NullableApiMachineRestart {
	return &NullableApiMachineRestart{value: val, isSet: true}
}

func (v NullableApiMachineRestart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMachineRestart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


